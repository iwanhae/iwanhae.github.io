<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Algorithm on iWan</title><link>https://iwanhae.github.io/categories/algorithm/</link><description>Recent content in Algorithm on iWan</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Fri, 24 May 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://iwanhae.github.io/categories/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>원리부터 파악하는 Unity의 DOTS</title><link>https://iwanhae.github.io/p/introduction-of-unity-dots/</link><pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate><guid>https://iwanhae.github.io/p/introduction-of-unity-dots/</guid><description>서론 필자는 원래 게임을 별로 즐겨하는 성격이 아니기에 Unity에 별 관심이 없었다.
데이터 시각화 수단으로써 잠깐 관심을 가졌던적이 있긴 하지만 그것도 잠시 훌륭한 Javascript 라이브러리들이 무식하게 커다란 데이터도 효율적으로, 구현하기 쉽게 시각화 수단을 제공하면서 이에대한 관심도 금방 사라졌다. (아무래도 Unity는 Restful한게 기본은 아니기에&amp;hellip;.)
그렇게 관심이 없어지면서 2018년까지 필자의 Unity에 대한 생각은
싱글스레드로 무식하게 물리연산해가면서 컴퓨터 리소스 우걱우걱 처먹고 틈만나면 램 처묵처묵하면서 버그 내뿜는 이상한 놈이지만 공짜에다 개발이 편해서 게임 개발자들에게 사랑받는 존재.</description></item><item><title>원리부터 파악하는 비트코인</title><link>https://iwanhae.github.io/p/introduction_of_bitcoin/</link><pubDate>Fri, 24 Feb 2017 00:00:00 +0000</pubDate><guid>https://iwanhae.github.io/p/introduction_of_bitcoin/</guid><description>https://git.iwanhae.ga/wan/introduction_of_bitcoin
서론 지금 (2016년 12월) 우리나라는 비트코인 열기가 한풀 꺽인 참이지만 세계적으로, 특히 중국의 경우 왠지모르게 엄청난 채굴경쟁과 함께 (사실 세계라긴보단 중국 내에서 열풍인데 총 채굴성능의 50% 이상이 중국에서 나옴) (일본도 약간 유행중.) 그 시세가 엄청 올랐다.
그 이유는 모르겠지만 생각난김에 비트코인을 처음보는사람이 이 포스트만보고 프로토타입을 구현할 수 있을정도의 설명을 적어보자 한다.
(이 글은 심심할때마다 조금씩 써집니다.)
(진부하지만 글 시작하기에 좋은) 비트코인이란? 비트코인은 세계최초의 암호화폐, 세계최초의 비 중앙집권적 금용시스템, 블록체인을 실용화시켜 엄청나게 극단적인 사람들의 경우 &amp;ldquo;4차 산업혁명을 앞당기는데 중대한 역할을 함!</description></item><item><title>Bitonic Sort (바이토닉 정렬) &amp; batcher's oddeven mergesort</title><link>https://iwanhae.github.io/p/bitonic-sort_batchers-oddeven-mergesort/</link><pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate><guid>https://iwanhae.github.io/p/bitonic-sort_batchers-oddeven-mergesort/</guid><description>서론 정렬알고리즘 뭐가좋아요? 라고 물어본다면
뭐 데이터 개수나 컴퓨터 성능의 제약등 이것저것 따져봐야할께 많이 있기는 하지만 일반적으로 Quick Sort면 대충 해결된다.
하지만, 시대는 더이상 **&amp;ldquo;단일 스레드를 빠르게!!&amp;quot;**가 아닌 **&amp;ldquo;엄청 많은 스레드를 같이!!&amp;quot;**의 시대로 변해버렸다.
요즘 대표적인 예가 GPGPU를 활용한 머신러닝 근사값찾기 노가다다.
뭐 그런거 요즘 생각하면서 심심풀이로 CUDA라이브러리 뒤적뒤적하다보니 OpenCL이 튀어나오고 OpenCL뒤적뒤적하다보니 Boost가 튀어나오는데 이놈 뒤적뒤적하다보니&amp;hellip;&amp;hellip;.
음? GPU써서 정렬했는데 훨씬 빠르다고?그전에 GPU써서 정렬이 가능해? 항상 Matrix계산만 시켰는데?
그거 생각하고 또 뒤적뒤적하다보니 찾아낸게 Bitonic Sort와 oddeven mergesort 이다.</description></item></channel></rss>